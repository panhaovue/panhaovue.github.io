<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>安装并配置Git</title>
    <url>/2020/09/23/%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEGit/</url>
    <content><![CDATA[<h1 id="安装Git并配置Git"><a href="#安装Git并配置Git" class="headerlink" title="安装Git并配置Git"></a>安装Git并配置Git</h1><h4 id="1-下载Git，并安装，不用修改设置。"><a href="#1-下载Git，并安装，不用修改设置。" class="headerlink" title="1. 下载Git，并安装，不用修改设置。"></a>1. 下载<a href="https://git-scm.com/downloads">Git</a>，并安装，不用修改设置。</h4><p>打开Windows Termainal，检查安装情况</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">❯  git --version</span><br><span class="line">git version <span class="number">2</span>.<span class="number">28</span>.<span class="number">0</span>.windows.<span class="number">1</span></span><br></pre></td></tr></table></figure>

<h4 id="2-配置Git"><a href="#2-配置Git" class="headerlink" title="2. 配置Git"></a>2. 配置Git</h4><ul>
<li><p>右键 -&gt; Git Bash Here，<strong>设置用户名和邮箱</strong>：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$  git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">$  git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建SSH Key，一直回车即可（也可以设置密码）</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>github添加密匙</p>
<p>进入目录 [C:\Users\用户名\.ssh] （要勾选显示“隐藏的项目”），用 id_rsa.pub 并复制所有内容。登陆 GitHub，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。取个Title名字，粘贴 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com`</span><br><span class="line">  You’ve successfully authenticated…`</span><br></pre></td></tr></table></figure>





</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Github+Hexo搭建博客</title>
    <url>/2020/09/22/Github+Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<hr>
<h4 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h4><p>下载<a href="https://nodejs.org/en/">Node.js</a>，并安装，不用修改设置。</p>
<p>打开Windows Termainal，检查安装情况</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">❯ node -v</span><br><span class="line">v14.<span class="number">11</span>.<span class="number">0</span>```</span><br></pre></td></tr></table></figure>

<h4 id="2-安装Git并配置Git"><a href="#2-安装Git并配置Git" class="headerlink" title="2. 安装Git并配置Git"></a>2. 安装Git并配置Git</h4><p>下载<a href="https://git-scm.com/downloads">Git</a>，并安装，不用修改设置。</p>
<p>打开Windows Termainal，检查安装情况</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">❯ git --version</span><br><span class="line">git version <span class="number">2</span>.<span class="number">28</span>.<span class="number">0</span>.windows.<span class="number">1</span></span><br></pre></td></tr></table></figure>

<h4 id="3-github创建仓库"><a href="#3-github创建仓库" class="headerlink" title="3. github创建仓库"></a>3. github创建仓库</h4><p>仓库名与用户名一致，即与下图蓝色区域一致</p>
<p><img src="https://ftp.bmp.ovh/imgs/2020/09/db9ee6f5ea93c178.jpg" alt="创建仓库"></p>
<h4 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h4><p>打开git bash</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo</span><br><span class="line">.....</span><br><span class="line">hexo@<span class="number">5</span>.<span class="number">2</span>.<span class="number">0</span></span><br><span class="line">added <span class="number">88</span> packages from <span class="number">348</span> contributors <span class="keyword">in</span> <span class="number">30</span>.<span class="number">6</span>s</span><br></pre></td></tr></table></figure>

<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">❯ hexo -v</span><br><span class="line">hexo-cli: <span class="number">4</span>.<span class="number">2</span>.<span class="number">0</span></span><br><span class="line"><span class="function">os: <span class="title">Windows_NT</span> 10.0.19042 <span class="title">win32</span> <span class="title">x64</span></span></span><br><span class="line"><span class="function"><span class="title">node</span>: 14.11.0</span></span><br><span class="line"><span class="function"><span class="title">v8</span>: 8.4.371.19-<span class="title">node</span>.16</span></span><br><span class="line"><span class="function"><span class="title">uv</span>: 1.39.0</span></span><br><span class="line"><span class="function"><span class="title">zlib</span>: 1.2.11</span></span><br><span class="line"><span class="function"><span class="title">brotli</span>: 1.0.9</span></span><br><span class="line"><span class="function"><span class="title">ares</span>: 1.16.0</span></span><br><span class="line"><span class="function"><span class="title">modules</span>: 83</span></span><br><span class="line"><span class="function"><span class="title">nghttp2</span>: 1.41.0</span></span><br><span class="line"><span class="function"><span class="title">napi</span>: 6</span></span><br><span class="line"><span class="function"><span class="title">llhttp</span>: 2.1.2</span></span><br><span class="line"><span class="function"><span class="title">openssl</span>: 1.1.1<span class="title">g</span></span></span><br><span class="line"><span class="function"><span class="title">cldr</span>: 37.0</span></span><br><span class="line"><span class="function"><span class="title">icu</span>: 67.1</span></span><br><span class="line"><span class="function"><span class="title">tz</span>: 2020<span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">unicode</span>: 13.0```</span></span><br></pre></td></tr></table></figure>

<h4 id="5-Hexo初始化"><a href="#5-Hexo初始化" class="headerlink" title="5.Hexo初始化"></a>5.Hexo初始化</h4><p>在本地创建与github仓库相同名的文件夹，即xxxxx.github.io。</p>
<p>在文件夹内右键打开git bash，依次执行</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$ hexo init   //初始化hexo</span><br><span class="line">$ npm install   //安装依赖包</span><br><span class="line">$ npm install hexo-deployer-git --save   //</span><br><span class="line">//本地查看</span><br><span class="line">$ hexo g       //生成静态文件</span><br><span class="line">$ hexo s       //启动本地服务</span><br></pre></td></tr></table></figure>

<p>此时可以在本地查看，输入<a href="http://localhost:4000/">http://localhost:4000</a>，就可以打开页面。</p>
<p>如果页面无法跳转，可以尝试改变端号，<code> hexo server -p 端口号</code>。</p>
<p>Hexo博客文件夹目录结构如下：</p>
<p><img src="https://ftp.bmp.ovh/imgs/2020/09/5be1b7093073ea2a.png" alt="Hexo博客目录结构"></p>
<h4 id="6-使用主题并部署网站"><a href="#6-使用主题并部署网站" class="headerlink" title="6. 使用主题并部署网站"></a>6. 使用主题并部署网站</h4><p>使用Next主题</p>
<p>在<code> xxxxx.github.io</code>主目录打开git bash here，输入：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$ git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>在<code>_config.yml</code>里启用新主题：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: landscape</span><br></pre></td></tr></table></figure>

<p>将默认的<code>landscape</code>修改成<code>next</code>。</p>
<p>进入Repository，复制项目xxxxx.github.io的 SSH码，在<code>deploy</code>后更改：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">deploy:</span></span><br><span class="line"><span class="function">  <span class="title">type</span>: <span class="title">git</span></span></span><br><span class="line"><span class="function">  <span class="title">repository</span>: <span class="title">git</span>@<span class="title">github.com:xxxxx</span>/<span class="title">xxxxx.github.io.git</span></span></span><br><span class="line"><span class="function">  <span class="title">branch</span>: <span class="title">master</span></span></span><br></pre></td></tr></table></figure>

<p>修改主题：</p>
<p>在theme目录下是主题的文件夹，里面有<code>_config.yml</code>，是主题的配置，可以修改。修改后，更新主题：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/主题名</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure>

<p>回到主目录，在git bash输入：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line">  $ <span class="built_in">cd</span> ..</span><br><span class="line">  $ hexo clean</span><br><span class="line">  $ hexo g  //(g = generate 修改生产)</span><br><span class="line">  $ hexo s  //(s = server   修改预览)</span><br><span class="line">  $ hexo d  //(d = deploy   修改部署) 网站上传部署到 GitHub Pages</span><br></pre></td></tr></table></figure>

<p>此时可以打开<code>https://xxxxx.github.io</code>查看博客。</p>
<h4 id="7-写文章并上传"><a href="#7-写文章并上传" class="headerlink" title="7. 写文章并上传"></a>7. 写文章并上传</h4><p>在<code> ..../xxxxx.github.io/source/_posts</code>打开git bash，输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new &#39;文章名&#39;</span><br><span class="line">$ cd ..</span><br><span class="line">$ cd ..</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<p>或者在文件开头手动加入如下格式 Front-matter ，写完后运行 <code>hexo g</code> 和 <code>hexo d</code> 发布。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World # 标题</span><br><span class="line">date: 2019/3/26 hh:mm:ss # 时间</span><br><span class="line">categories: # 分类</span><br><span class="line">- Diary</span><br><span class="line">tags: # 标签</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文</span><br></pre></td></tr></table></figure>

<h4 id="8-常用命令"><a href="#8-常用命令" class="headerlink" title="8. 常用命令"></a>8. 常用命令</h4><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">hexo new &quot;name&quot;       # 新建文章</span><br><span class="line">hexo new page &quot;name&quot;  # 新建页面</span><br><span class="line">hexo g                # 生成页面</span><br><span class="line">hexo d                # 部署</span><br><span class="line">hexo g -d             # 生成页面并部署</span><br><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo help             # 帮助</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>HTML学习</title>
    <url>/2020/10/27/HTML%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="HTML简述"><a href="#HTML简述" class="headerlink" title="HTML简述"></a>HTML简述</h2><ul>
<li>HTML是一种超文本标记语言，不是一种编程语言，是一套标记标签，用标记标签来描述网页。</li>
<li>HTML文档包括<strong>HTML标记标签</strong>以及<strong>纯文本</strong>，也称为网页。</li>
</ul>
<h2 id="HTML元素"><a href="#HTML元素" class="headerlink" title="HTML元素"></a>HTML元素</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;http://panhaovue.github.io&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>ssssss<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>ddddddd<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>ffffffff<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>hhhh<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>HTML的标记标签是由 <code> &lt; &gt;</code>包括的关键词，通常成对出现，例如<code> &lt;h1&gt; &lt;/h1&gt;</code> 。其中，<code> &lt;h1&gt;</code>是开始标签，<code>&lt;/h1&gt;</code>是闭合标签。</li>
<li><code>&lt;!DOCTYPE html&gt;</code> 位于HTML文档的第一行，不是HTML标签，是告诉web浏览器该页面使用<strong>HTML5</strong>编写的命令。与HTML4的命令不同。</li>
<li><code> &lt;html&gt; &lt;/html&gt;</code> 之间的文本描述网页。</li>
<li><code>&lt;body&gt; &lt;/body&gt;</code>之间的文本是可见的页面内容。</li>
</ul>
<h5 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML<head></h5><ul>
<li><code>&lt;head&gt; &lt;/head&gt;</code>是所有头部元素的容器。可以添加到<code>&lt;head&gt;</code>部分的标签有<code>&lt;title&gt;</code>、<code>&lt;base&gt;</code>、<code>&lt;link&gt;</code>、<code>&lt;meta&gt;</code>、<code>&lt;script&gt;</code> 、<code>&lt;style&gt;</code>。<ul>
<li><code> &lt;title&gt;</code>标签之间的文本是文档的标题。</li>
<li><code>&lt;base&gt;</code>标签为页面上的所有链接规定为默认地址或者默认目标（target）。</li>
<li><code>&lt;link&gt;</code>标签定义文档与外部资源之间的关系，最常用于链接样式表。</li>
<li><code>&lt;style&gt;</code>标签用于为HTML文档定义样式信息。</li>
<li><code>&lt;meta&gt;</code>包含了文档的元（meta）数据，用于规定页面的描述、关键词、文档的作者、最后修改时间以及其他元数据。如<code> &lt;meta charset=&quot;UTF-8&quot;&gt;</code> 定义网页编码格式为<code>UTF-8</code>。</li>
<li><code>&lt;script&gt;</code>标签用于定义脚本，如JavaScript。</li>
</ul>
</li>
</ul>
<h5 id="HTML标题"><a href="#HTML标题" class="headerlink" title="HTML标题"></a>HTML标题</h5><ul>
<li><code>&lt;h1&gt; &lt;/h1&gt;</code>之间的文本是标题，此外还有h2、h3、h4、h5、h6。</li>
</ul>
<h5 id="HTML段落"><a href="#HTML段落" class="headerlink" title="HTML段落"></a>HTML段落</h5><ul>
<li><code>&lt;p&gt; &lt;/p&gt;</code>之间的文本是段落。</li>
</ul>
<h5 id="HTML链接"><a href="#HTML链接" class="headerlink" title="HTML链接"></a>HTML链接</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;chun&quot;</span>&gt;</span>春晓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://panhaovue.github.io&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>十二的夜<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#chun&quot;</span>&gt;</span>跳转春晓<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>href(指向另一个文档的链接)</code>后的是链接地址url，<code>&lt;a&gt; &lt;/a&gt;</code>之间的文本是网页上显示的文本。</li>
<li>URL(统一资源定位器)：只能使用<strong>ASCII字符集</strong>来通过因特网进行发送，使用“%”加两位16进制数来替换非ASCII字符。URL不能包含空格，通常使用“+”来替换空格。</li>
<li><code>target</code>定义在链接在哪里打开。</li>
<li><code>name(创建本文档内的书签链接)</code>规定锚的名称。可以使用<code>id</code>代替。</li>
</ul>
<h5 id="HTML-图像"><a href="#HTML-图像" class="headerlink" title="HTML 图像"></a>HTML 图像</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/设计 - 6.jpg&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">width</span>=<span class="string">&quot;350&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;设计&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code> src(源属性)</code>后是图片地址，<code> height</code> 是图片的显示高度，<code>width</code>是图片的显示宽度。</li>
<li><code>alt(替换文本属性)</code>是当图片无法加载时显示的文本。</li>
</ul>
<h5 id="HTML-注释"><a href="#HTML-注释" class="headerlink" title="HTML 注释"></a>HTML 注释</h5><p><code> &lt;!-- 注释文本 --!&gt;</code>插入注释。</p>
<h5 id="HTML水平线"><a href="#HTML水平线" class="headerlink" title="HTML水平线"></a>HTML水平线</h5><p><code> &lt;hr /&gt;</code>插入一条水平线。</p>
<h5 id="HTML折行"><a href="#HTML折行" class="headerlink" title="HTML折行"></a>HTML折行</h5><p><code>&lt;br /&gt;</code>在不产生新段落下进行换行。</p>
<h5 id="HTML表格"><a href="#HTML表格" class="headerlink" title="HTML表格"></a>HTML表格</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>第一列<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>第二列<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>r1,c1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>r1,c2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>r2,c1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>r2,c2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>&lt;table&gt; &lt;/table&gt;</code>定义表格，<code>border</code>定义表格属性。</li>
<li><code>&lt;tr&gt; &lt;/tr&gt;</code>定义表格中的行.</li>
<li><code>&lt;th&gt; &lt;/th&gt;</code> 定义表格表头。</li>
<li><code>&lt;td&gt; &lt;/td&gt;</code>定义表格数据内容。</li>
</ul>
<h5 id="HTML列表"><a href="#HTML列表" class="headerlink" title="HTML列表"></a>HTML列表</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>学习<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>工作<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>学习<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>工作<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>While cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p><code>&lt;ul&gt;</code>定义无序列表、<code>&lt;ol&gt;</code>定义有序列表。</p>
<ul>
<li><code>&lt;li&gt;</code>列表项</li>
</ul>
</li>
<li><p><code>&lt;dl&gt;</code>定义自定义列表。</p>
<ul>
<li><code>&lt;dt&gt;</code>定义自定义列表项</li>
<li><code>&lt;dd&gt;</code>定义自定义列表项的子项</li>
</ul>
</li>
</ul>
<h5 id="div、span元素"><a href="#div、span元素" class="headerlink" title="div、span元素"></a>div、span元素</h5><ul>
<li><p>块元素：通常是新行开始、结束。</p>
</li>
<li><p>内联元素：显示时不开始新行。</p>
</li>
<li><p>div元素为块元素，可以定义内容块，作为其他元素的容器，为内容设置样式属性。</p>
</li>
<li><p>span元素为内联元素，为部分元素设置样式属性。</p>
</li>
</ul>
<h5 id="HTML框架"><a href="#HTML框架" class="headerlink" title="HTML框架"></a>HTML框架</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;50%, 50%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;test1.html&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;test2.html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>使用框架可以在一个窗口中显示多个页面，每个框架中显示一个HTML文档，框架之间互相独立。</li>
<li><code>&lt;frameset&gt;</code>框架结构标签定义如何将窗口分割为框架，分割成行或者列，以及所占面积。</li>
<li><code>&lt;frame&gt;</code>框架标签定义了放置在框架中的HTML文档。</li>
<li>不能将 <code>&lt;body&gt;&lt;/body&gt;</code> 标签与 <code>&lt;frameset&gt;&lt;/frameset&gt; </code>标签同时使用！假如添加包含文本的 <code>&lt;noframes&gt; </code>标签，就必须将这段文字嵌套于 <code>&lt;body&gt;&lt;/body&gt;</code> 标签内。</li>
</ul>
<h5 id="HTML-iframe"><a href="#HTML-iframe" class="headerlink" title="HTML iframe"></a>HTML iframe</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;html_test1.html&quot;</span> <span class="attr">name</span>=<span class="string">&quot;iframe_a&quot;</span> <span class="attr">width</span>=<span class="string">&quot;550&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://panhaovue.github.io&quot;</span> <span class="attr">target</span>=<span class="string">&quot;iframe_a&quot;</span>&gt;</span>ddd<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>&lt;ifeame&gt;</code>定义内联的子窗口，用于在网页中显示网页。<code>frameborder**=&quot;0&quot;</code>是不显示边框。</li>
<li><code>&lt;iframe&gt;</code>可以用作链接<code>&lt;a&gt;</code>的<code>target</code>(链接的打开页面)，<code>target</code>与<code>&lt;iframe&gt;</code>的<code>name</code>需要相同。</li>
</ul>
<h5 id="HTML表单"><a href="#HTML表单" class="headerlink" title="HTML表单"></a>HTML表单</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;GET&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        密  码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;cars&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;vovlo&quot;</span>&gt;</span>Vovlo<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;audi&quot;</span>&gt;</span>audi<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;saaab&quot;</span>&gt;</span>saaab<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;fadd&quot;</span>&gt;</span>fadd<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;vehicle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;car&quot;</span>&gt;</span>car<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;vehicle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;bike&quot;</span>&gt;</span>bike<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;5&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;哈哈傻子&#x27;)&quot;</span>&gt;</span>button<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">list</span>=<span class="string">&quot;browsers&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;browsers&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;IE&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Firefox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Chrome&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line">        国家代码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;country_code&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;[A-Z]&#123;3&#125;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;3个大写字母的国家代码&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>HTML表单用于收集不同类型的用户输入。表单元素包<strong>input</strong>、</p>
<p><strong>复选框</strong>、<strong>单选按钮</strong>、<strong>提交按钮</strong>等。</p>
</li>
<li><p><code>name</code>属性，为了正确提交表单信息，每一个字段都需要设置name属性。</p>
</li>
<li><p><code>&lt;fieldset&gt;</code>元素组合表单中的相关数据。</p>
</li>
<li><p><code>&lt;legend&gt;</code>元素为<code>&lt;fieldset&gt;</code>元素定义标题。</p>
</li>
<li><p><code>&lt;form&gt;</code>元素，属性如下：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>accept-charset</td>
<td>规定在被提交表单中使用的字符集（默认：页面字符集）。</td>
</tr>
<tr>
<td>action</td>
<td>规定向何处提交表单的地址（URL）</td>
</tr>
<tr>
<td>autocomplete</td>
<td>规定浏览器应该自动完成表单，基于用户之前的输入值自动填写值。（默认：开启）</td>
</tr>
<tr>
<td>enctype</td>
<td>规定被提交数据的编码（默认：url-encoded）</td>
</tr>
<tr>
<td>method</td>
<td>规定在提交表单所用的http方法（默认：GET）</td>
</tr>
<tr>
<td>name</td>
<td>规定识别表单的名称（对于DOM使用：document.forms.name）</td>
</tr>
<tr>
<td>novalidate</td>
<td>规定浏览器不验证表单。</td>
</tr>
<tr>
<td>target</td>
<td>规定action属性中地址的目标（默认：_self）</td>
</tr>
</tbody></table>
<ul>
<li><p><code>action</code>属性定义了提交表单是的执行动作，通常是使用提交按钮，如果省略action属性，则action会被设置为当前页面。</p>
</li>
<li><p><code>method</code>属性定义了提交表单是用的HTTP方法。</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>GET（默认方法）</td>
<td>表单提交是被动的，并且没有敏感信息。适合少量数据的提交，浏览器会设定容量控制，在地址栏可以看到相应的数据。</td>
</tr>
<tr>
<td>POST</td>
<td>表单在更新数据，包含敏感信息。安全性比GET方法要好，在地址栏看不到相应的数据。</td>
</tr>
</tbody></table>
</li>
</ul>
</li>
<li><ul>
<li><code>&lt;input type=&quot;&quot;&gt;</code>是输入数据，type属性类型如下：</li>
</ul>
<p>HTML5增加的输入类型：<strong>color、date、datetime、datetime-local、email、month、number、range、search、tel、time、url、week</strong>。老式 web 浏览器不支持的输入类型，会被视为输入类型 text。</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>text</td>
<td>定义常规文本输入。</td>
</tr>
<tr>
<td>radio</td>
<td>定义单选按钮输入。</td>
</tr>
<tr>
<td>submit</td>
<td>定义提交按钮（提交表单）。</td>
</tr>
<tr>
<td>password</td>
<td>定义密码字段，输入的字符会做掩码处理（显示为其他字符）。</td>
</tr>
<tr>
<td>checkbox</td>
<td>定义复选框，可以选择一个或者多个选项。</td>
</tr>
</tbody></table>
<ul>
<li><p>输入限制：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>disabled</td>
<td>规定输入字段被禁用。被禁用的元素不会被提交。</td>
</tr>
<tr>
<td>max</td>
<td>规定输入字段的最大值。</td>
</tr>
<tr>
<td>min</td>
<td>规定输入字段的最小值。</td>
</tr>
<tr>
<td>maxlength</td>
<td>规定输入字段的最大字符数。</td>
</tr>
<tr>
<td>pattern</td>
<td>规定通过气检查输入值的正则表达式。</td>
</tr>
<tr>
<td>readonly</td>
<td>规定输入字段为只读（无法修改）。readonly 属性不需要值。它等同于 readonly=”readonly”。</td>
</tr>
<tr>
<td>required</td>
<td>规定字段必须填写。</td>
</tr>
<tr>
<td>size</td>
<td>规定输入字段的宽度（以字符计）</td>
</tr>
<tr>
<td>step</td>
<td>规定输入字段的合法数字间隔。</td>
</tr>
<tr>
<td>value</td>
<td>规定输入字段的默认值。</td>
</tr>
</tbody></table>
</li>
</ul>
</li>
<li><p><code>&lt;select&gt;</code>元素定义下拉列表，<code>&lt;option&gt;</code>元素定义列表中的选项。</p>
</li>
<li><p><code>&lt;datalist&gt;</code>元素为<code>&lt;input&gt;</code>元素规定预定义选项列表。用户在输入框输入数据时，可以看到预定义的下拉列表。**<input>的list属性必须和<datalist>的id属性相同**</p>
</li>
<li></li>
</ul>
<p>​    </p>
<h2 id="HTML属性"><a href="#HTML属性" class="headerlink" title="HTML属性"></a>HTML属性</h2><p>HTML属性可以赋予元素意义和语境。</p>
<p>下列是适用大多数HTML元素的属性：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>class</td>
<td>为HTML元素定义一个或者多个类名（classname）（类名从样式引入）</td>
</tr>
<tr>
<td>id</td>
<td>定义元素的唯一id</td>
</tr>
<tr>
<td>style</td>
<td>规定元素的行内样式（inline style）</td>
</tr>
<tr>
<td>title</td>
<td>描述了元素的额外信息（作为工具条使用）</td>
</tr>
</tbody></table>
<ul>
<li><p>HTML的style属性：可以改变所有HTML元素的样式的方法</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;background-color: antiquewhite;&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">&quot;font-style: italic;&quot;</span>&gt;</span>ffffffff<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="HTML-网站布局"><a href="#HTML-网站布局" class="headerlink" title="HTML 网站布局"></a>HTML 网站布局</h2><table>
<thead>
<tr>
<th>header</th>
<th>定义文档或节的页眉</th>
</tr>
</thead>
<tbody><tr>
<td>nav</td>
<td>定义导航链接的容器</td>
</tr>
<tr>
<td>section</td>
<td>定义文档中的节</td>
</tr>
<tr>
<td>article</td>
<td>定义独立的自包含文章</td>
</tr>
<tr>
<td>aside</td>
<td>定义内容之外的内容（比如侧栏）</td>
</tr>
<tr>
<td>footer</td>
<td>定义文档或节的页脚</td>
</tr>
<tr>
<td>details</td>
<td>定义额外的细节</td>
</tr>
<tr>
<td>summary</td>
<td>定义details元素的标题</td>
</tr>
</tbody></table>
<h2 id="HTML响应式Web设计"><a href="#HTML响应式Web设计" class="headerlink" title="HTML响应式Web设计"></a>HTML响应式Web设计</h2><ul>
<li>RWD就是响应式设计（Responsive Web Design），能够以可变尺寸传递网页。</li>
</ul>
<h2 id="HTML文件路径"><a href="#HTML文件路径" class="headerlink" title="HTML文件路径"></a>HTML文件路径</h2><ul>
<li>相对路径：从当前所在的工作目录开始写起。</li>
</ul>
<table>
<thead>
<tr>
<th>路径</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>&lt;img src=&quot;a.jpg&quot;&gt;</code></td>
<td>a.jpg在与当前网页同文件夹内</td>
</tr>
<tr>
<td><code>&lt;img src=&quot;images/a.jpg&quot;&gt;</code></td>
<td>a.jpg在当前文件夹的images文件夹内</td>
</tr>
<tr>
<td><code>&lt;img src=&quot;/images/a.jpg&quot;&gt;</code></td>
<td>a.jpg在工作根目录的images文件夹内</td>
</tr>
<tr>
<td><code>&lt;img src=&quot;../a.jpg&quot;&gt;</code></td>
<td>a.jpg在当前文件夹的上一级文件夹内</td>
</tr>
</tbody></table>
<ul>
<li>绝对路径：指向一个文件的完整链接，通常从盘符或者根目录<code>/</code>开始。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Typora+PicGo/PicGo-core+SM.MS/Github实现图床</title>
    <url>/2021/01/13/Typora+Picgo+GithubSM.MS%E5%AE%9E%E7%8E%B0%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<p>在使用Typora时，之前一直都是在网上找一个图床，然后把要在MD文档插入的图片上传图床，再把链接插入到MD文档。这种方法实在是繁琐，一张两张图片还好，多了的话，完全不想再写文章。现在发现Typora可以设置自动上传图片，于是动手。</p>
<a id="more"></a>

<h2 id="Typora-PicGo-PicGo-core-SM-MS-Github实现图床"><a href="#Typora-PicGo-PicGo-core-SM-MS-Github实现图床" class="headerlink" title="Typora+PicGo/PicGo-core+SM.MS/Github实现图床"></a>Typora+PicGo/PicGo-core+SM.MS/Github实现图床</h2><h4 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h4><p>在使用Typora时，之前一直都是在网上找一个图床，然后把要在MD文档插入的图片上传图床，再把链接插入到MD文档。这种方法实在是繁琐，一张两张图片还好，多了的话，完全不想再写文章。现在发现Typora可以设置自动上传图片，于是动手。</p>
<blockquote>
<p>图床是一个便于在博文中插入在线图片连接的个人图片仓库。设置图床之后，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看，除非自己亲自删除。</p>
</blockquote>
<h4 id="一、需用到的链接"><a href="#一、需用到的链接" class="headerlink" title="一、需用到的链接"></a>一、需用到的链接</h4><ul>
<li><strong>Typora</strong>地址：<a href="https://typora.io/">https://typora.io/</a></li>
<li><strong>nodejs</strong>地址：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></li>
<li><strong>PicGo</strong>地址：<a href="https://github.com/Molunerfinn/picgo/releases">https://github.com/Molunerfinn/picgo/releases</a></li>
<li><strong>SM.MS</strong>地址：<a href="https://sm.ms/">https://sm.ms/</a></li>
<li><strong>github</strong>地址：<a href="https://github.com/">https://github.com/</a></li>
</ul>
<h4 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h4><p><strong>Typora</strong>、<strong>PicGo</strong>都是按步骤安装即可；</p>
<p>如果使用<strong>PicGo-core</strong>，则在Typora的<strong>上传服务</strong>中选择<strong>PicGo-core</strong>。然后点击下载或更新，即可下载。</p>
<img src="https://i.loli.net/2021/01/13/sxvGXZNqVtiYCP5.png" alt="image-20210113102319576" style="zoom:50%;" />

<p>使用<strong>PicsGo-core</strong>需要安装<strong>nodejs</strong>，按步骤安装即可。</p>
<h4 id="三、使用SM-MS作为图床"><a href="#三、使用SM-MS作为图床" class="headerlink" title="三、使用SM.MS作为图床"></a>三、使用SM.MS作为图床</h4><ol>
<li>注册SM.MS账号</li>
<li>进入个人页面，生成<strong>Secret Token</strong>，注册后可以直接打开这个链接<a href="https://sm.ms/home/apitoken">https://sm.ms/home/apitoken</a></li>
</ol>
<p><img src="https://i.loli.net/2021/01/13/vkSmM8hQlIKPpCA.png" alt="image-20210113091937985"></p>
<ol start="3">
<li>复制Token到PicGo即可</li>
</ol>
<p><img src="https://i.loli.net/2021/01/13/MpQSaj7O8hrzs2E.png" alt="image-20210113092136180"></p>
<ol start="4">
<li><p>使用<strong>PicGo（app）</strong></p>
<ol>
<li>在Typora里设置<ol>
<li>将上传服务选为<strong>PicGo（app）</strong></li>
<li>将PicGo路径设置为<strong>PicGo的安装路径</strong><br><img src="https://i.loli.net/2021/01/13/BUmVgozh7QaHN5f.png" alt="image-20210113093417019"></li>
<li>点击<strong>验证图片上传选项</strong>，出现下列绿字即成功<br><img src="https://i.loli.net/2021/01/13/CIbzlTUeOyLmpqj.png" alt="image-20210113093622199"></li>
<li>将插入图片时设置为<strong>上传图片</strong>可以自动上传，即<br><img src="https://i.loli.net/2021/01/13/fJeKcgYzH2jpd4D.png" alt="image-20210113093649078"></li>
<li>或者可以在文档中粘贴图片时，右键点击图片，选择上传图片，手动操作。</li>
</ol>
</li>
</ol>
</li>
<li><p>使用<strong>PicsGo-core</strong></p>
<ol>
<li><p>安装插件<code>picgo-plugin-smms-user</code>，显示<code>[PicGo SUCCESS]:xxxxx </code>安装成功即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd C:\Users\xxxx\AppData\Roaming\Typora\picgo\win64 &#x2F;&#x2F;先进入安装目录</span><br><span class="line">.\picgo.exe install smms-user</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<strong>PicsGo-core</strong>的配置文件<code>config.json</code>，在安装处可以直接打开</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span>: <span class="string">&quot;smms-user&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;current&quot;</span>: <span class="string">&quot;smms-user&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;smms-user&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;Authorization&quot;</span>: <span class="string">&quot;自己的token&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;transformer&quot;</span>: <span class="string">&quot;path&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;picgo-plugin-smms-user&quot;</span>: <span class="literal">true</span><span class="comment">// 启用插件</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>点击<strong>验证图片上传选项</strong>，验证是否上传成功。</p>
</li>
</ol>
</li>
</ol>
<h4 id="四、选择Github作为图床"><a href="#四、选择Github作为图床" class="headerlink" title="四、选择Github作为图床"></a>四、选择Github作为图床</h4><blockquote>
<p>其实不推荐使用github，可以试试gitee。因为图片在typora中上传后，图片会裂开，需要魔法上网，无论是自己看还是别人看都麻烦了一些，毕竟我不是整天开着魔法。</p>
</blockquote>
<ol>
<li><p>注册Github账号，创建一个token，按步骤setting-&gt;developer setting-&gt;personal access tokens-&gt;generate new token</p>
</li>
<li><p>创建仓库<strong>cdn-images</strong>，建立文件夹<strong>blog-images</strong></p>
</li>
<li><p>使用<strong>PicGo （app）</strong></p>
<ol>
<li><p>安装插件<code>github-plus</code></p>
<img src="https://i.loli.net/2021/01/13/BKImd2iwTOjMxNn.png" alt="image-20210113111004154" style="zoom:80%;" /> 
</li>
<li><p>设置。repo是仓库，格式：<code>&lt;用户名&gt;/&lt;仓库名称&gt;</code></p>
<img src="https://i.loli.net/2021/01/13/hmUFfnZMqxv8IbT.png" alt="image-20210113111154331" style="zoom:80%;" />
</li>
<li><p>在typora中将上传服务选为<strong>PicGo（app）</strong>即可。</p>
</li>
</ol>
</li>
<li><p>使用<strong>PicGo-core</strong></p>
<p>设置配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;picBed&quot;: &#123;</span><br><span class="line">    &quot;uploader&quot;: &quot;githubPlus&quot;,</span><br><span class="line">    &quot;current&quot;: &quot;githubPlus&quot;,</span><br><span class="line">    &quot;githubPlus&quot;: &#123;</span><br><span class="line">      &quot;branch&quot;: &quot;master&quot;, &#x2F;&#x2F; 仓库分支</span><br><span class="line">      &quot;customUrl&quot;: &quot;&quot;, &#x2F;&#x2F; 访问的自定义url</span><br><span class="line">      &quot;origin&quot;: &quot;github&quot;, &#x2F;&#x2F; 存放的图片类型</span><br><span class="line">      &quot;repo&quot;: &quot;&quot;, &#x2F;&#x2F; 存放图片的仓库</span><br><span class="line">      &quot;path&quot;: &quot;blog-images&quot;, &#x2F;&#x2F; 存放图片的仓库目录下的文件夹</span><br><span class="line">      &quot;token&quot;: &quot;自己的&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;picgoPlugins&quot;: &#123;</span><br><span class="line">    &quot;picgo-plugin-github-plus&quot;: true, &#x2F;&#x2F; 启用github-plus插件</span><br><span class="line">    &quot;picgo-plugin-smms-user&quot;: true,</span><br><span class="line">    &quot;picgo-plugin-rename-file&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;picgo-plugin-github-plus&quot;: &#123;</span><br><span class="line">    &quot;lastSync&quot;: &quot;2021-01-13 11:20:39&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h4 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h4><ol>
<li><p>picgo（app）的安装的module地址为<code>C:\Users\xxxx\AppData\Roaming\picgo\node_modules</code>、<code>C:\Users\xxxx\AppData\Roaming\npm\node_modules\picgo\node_modules</code></p>
</li>
<li><p>picdo-core的安装的module地址为<code>C:\Users\xxxx\.picgo\node_modules</code></p>
</li>
<li><p>可以安装<code>rename-file</code>在上传的时候对图片进行重命名</p>
<ol>
<li><p>picgo（app）直接在应用搜索<strong>rename-file</strong>安装即可；</p>
</li>
<li><p>picdo-core安装方式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Users\用户名\AppData\Roaming\Typora\picgo\win64</span><br><span class="line">picgo install <span class="built_in">rename</span>-file</span><br></pre></td></tr></table></figure>

<p>在配置文件中自己设定格式（可改可不改）：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;picgo-plugin-rename-file&quot;: &#123;</span><br><span class="line">    &quot;format&quot;: &quot;&#123;y&#125;/&#123;m&#125;/&#123;d&#125;/&#123;hash&#125;-&#123;origin&#125;-&#123;rand:6&#125;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>learn</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>PicsGo</tag>
      </tags>
  </entry>
</search>
